package jdbcVsHibernate;

import jpa.entity.Student;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.query.Query;

import javax.persistence.Persistence;
import java.util.List;

/**
 * üëâ –ó–¥–µ—Å—å –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –æ–±—ä–µ–∫—Ç–æ–º –∫–∞–∫ —Å –æ–±—ã—á–Ω—ã–º Java-–∫–ª–∞—Å—Å–æ–º:
 * 	‚Ä¢	save(user) ‚Üí Hibernate –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç INSERT.
 * 	‚Ä¢	user.setAge(26) ‚Üí Hibernate —Å–∞–º —É–≤–∏–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏ —Å–¥–µ–ª–∞–µ—Ç UPDATE –ø—Ä–∏ –∫–æ–º–º–∏—Ç–µ.
 * 	‚Ä¢	remove(user) ‚Üí Hibernate —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç DELETE.
 */
public class HibernateExample {
    public static void main(String[] args) {
        SessionFactory sessionFactory = Persistence
                .createEntityManagerFactory("students-h2")
                .unwrap(SessionFactory.class);
        Session session = sessionFactory.openSession();
        Transaction tx = session.beginTransaction();

        // INSERT (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç)
        ExampleUser user = new ExampleUser("Anna", 25);
        session.save(user);

        // UPDATE (–ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º –ø–æ–ª–µ –≤ –æ–±—ä–µ–∫—Ç–µ ‚Äî Hibernate —Å–∞–º —Å–¥–µ–ª–∞–µ—Ç UPDATE)
        user.setAge(26);

        // DELETE (–ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º remove)
        session.remove(user);

        /** –ø—Ä–∏–º–µ—Ä —Å –∫–µ—à–æ–º */
        // –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å: Hibernate –ø–æ–π–¥–µ—Ç –≤ –ë–î
        ExampleUser user1 = session.get(ExampleUser.class, 1L);

        // –í—Ç–æ—Ä–æ–π —Ä–∞–∑ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç: Hibernate –≤–µ—Ä–Ω—ë—Ç –∏–∑ –∫—ç—à–∞,
        // –≤ –±–∞–∑—É –±–æ–ª—å—à–µ –Ω–µ –ø–æ–π–¥–µ—Ç
        ExampleUser user2 = session.get(ExampleUser.class, 1L);

        System.out.println(user1 == user2); // true (–æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç –≤ –ø–∞–º—è—Ç–∏)
        tx.commit();

        Query<ExampleUser> query = session.createQuery("SELECT e FROM ExampleUser e", ExampleUser.class);
        List<ExampleUser> users = query.getResultList();
        users.forEach(System.out::println);

        session.close();

    }
}
